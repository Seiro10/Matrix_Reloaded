version: '3.8'

services:
  # Router Agent
  router-agent:
    build:
      context: ./services/router-agent
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - PORT=8080
      - DB_PATH=/app/data/content_db.sqlite
      # API keys
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Agent communication URLs - use service names
      - REWRITER_AGENT_URL=http://rewriter-agent:8082
      - COPYWRITER_AGENT_URL=http://copywriter-agent:8083
    volumes:
      - router_agent_data:/app/data
      - router_agent_output:/app/output
      - router_agent_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - content-agents
    depends_on:
      - rewriter-agent

  # NEW Rewriter Agent (FastAPI + LangGraph)
  rewriter-agent:
    build:
      context: ./services/rewriter-agent
      dockerfile: Dockerfile
    ports:
      - "8082:8082"  # External port 8082, internal FastAPI port 8000
    environment:
      - ENVIRONMENT=production
      - PYTHONPATH=/app
      # API Keys
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # WordPress Configuration
      - USERNAME_WP=${WORDPRESS_USERNAME}
      - PASSWORD_WP=${WORDPRESS_PASSWORD}
      - WORDPRESS_BASE_URL=${WORDPRESS_API_URL:-https://stuffgaming.fr}
    volumes:
      - rewriter_agent_logs:/app/logs
      - rewriter_agent_temp:/app/temp
      - rewriter_agent_generated:/app/generated
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - content-agents

  # Content Finder Agent
  content-finder:
    build:
      context: ./services/agents-content-finder
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - PORT=8000
      - ROUTER_AGENT_URL=http://router-agent:8080
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DATAFOR_SEO_TOKEN=${DATAFOR_SEO_TOKEN}
      - BRIGHT_DATA_API_KEY=${BRIGHT_DATA_API_KEY}
      - BRIGHTDATA_ZONE_NAME=${BRIGHTDATA_ZONE_NAME}
    volumes:
      - content_finder_output:/app/output
      - content_finder_data:/app/data
      - content_finder_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - content-agents

volumes:
  router_agent_data:
    driver: local
  router_agent_output:
    driver: local
  router_agent_logs:
    driver: local
  rewriter_agent_logs:
    driver: local
  rewriter_agent_temp:
    driver: local
  rewriter_agent_generated:
    driver: local
  content_finder_output:
    driver: local
  content_finder_data:
    driver: local
  content_finder_logs:
    driver: local

networks:
  content-agents:
    driver: bridge